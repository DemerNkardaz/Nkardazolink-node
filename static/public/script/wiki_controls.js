import utils from"./utils.js";let title;document.addEventListener("DOMContentLoaded",(()=>{title=document.querySelector("title");const t=document.querySelector('.nw-article-tabs__switch-btn[aria-selected="true"]');document.querySelector(`#${t.getAttribute("aria-controls")}`).classList.add("active");if("true"===localStorage.getItem("nwArticleExpanded")){const t=document.querySelector(".nw-article-page"),e=document.querySelectorAll(".nw-root-container__main-block, .nw-root-container"),a=document.querySelector('.nw-page-action__expand-page[data-action="expand-article"]');e.forEach((t=>t.style.transition="none")),t.classList.add("nw-article-page--expanded"),a.setAttribute("data-icon","fullscreen_exit"),setTimeout((()=>e.forEach((t=>t.removeAttribute("style")))),100)}document.querySelector('.nw-page-action__edit[data-action="edit-article"]').setAttribute("href",`${window.location.href.split("?")[0]}?action=edit`)})),document.addEventListener("click",(function(t){const e=t.target;if("expand-article"===e.getAttribute("data-action")){const t=document.querySelector(".nw-article-page");"fullscreen"===e.getAttribute("data-icon")?(t.classList.add("nw-article-page--expanded"),e.setAttribute("data-icon","fullscreen_exit"),localStorage.setItem("nwArticleExpanded","true")):(t.classList.remove("nw-article-page--expanded"),e.setAttribute("data-icon","fullscreen"),localStorage.setItem("nwArticleExpanded","false"))}if(e.classList.contains("nw-article-tabs__switch-btn")&&e.getAttribute("aria-controls")){t.preventDefault();const a=document.querySelectorAll(".nw-article-tab__content"),n=document.querySelectorAll(".nw-article-tabs__switch-btn");if("true"===e.getAttribute("aria-selected"))return;{n.forEach((t=>t.setAttribute("aria-selected","false"))),a.forEach((t=>t.classList.remove("active"))),e.setAttribute("aria-selected","true");const t=document.querySelector(`#${e.getAttribute("aria-controls")}`),r=t.getAttribute("data-sectionlabel");if(t.classList.add("active"),0!==Array.prototype.indexOf.call(n,e))history.replaceState({},"",utils.space2underline(decodeURIComponent(e.href))),title.textContent.includes("—")?title.textContent=title.textContent.replace(/—\s(.*?)\s\|/,`— ${r} |`):title.textContent=title.textContent.replace(/\s\|/,` — ${r} |`);else{const t=new URL(e.href),a=t.pathname.split("/").slice(0,-1).join("/"),n=`${t.origin}${a}`;history.replaceState({},"",n),title.textContent=title.textContent.replace(/—\s(.*?)\s\|/," |")}}}}));