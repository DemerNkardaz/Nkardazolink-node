Renderers:
  - ejs: 'ejs'
  - pug: 'pug'
  - marked: 'marked'
  - remarkable: '{ Remarkable }'
Remarkable-settings:
  - Vars
  - markdown: 'new Remarkable({ html: true, breaks: true })'
Interpretators:
  - sass: 'sass'
IndexDependencies:
  - compression: 'compression'
  - zlib: 'zlib'
  - fs: 'fs'
  - js-yaml: 'yaml'
  - util: '{ promisify }'
  - path: 'path'
  - express: 'express'
  - socket.io: 'socketIO'
  - url: '{ URL }'
  - xml2js: 'xml2js'
  - xmlbuilder: 'xmlbuilder'
  - libxmljs: 'libxmljs'
  - stream: '{ Readable }'
  - cookie-parser: 'cookieParser'
  - jsonpath: 'jsonpath'
  - jszip: 'jzsip'
  - jquery: '$'
  - os: 'os'
  - child_process: '{ execSync }'
  - serialize-javascript: 'jsSerialize'
ProjectDependencies:
  - ./app/hooks/DataExtend.js: '{ DataExtend }'
  - ./app/hooks/StringHandling.js: '{ StringHandling }'
  - ./app/hooks/LocalisationHandling.js: '{ localise }'
  - ./app/scripts/PostProcessor.js: '{ PostProcessor }'
  - ./app/scripts/ComponentHandling.js: '{ PagePrerender, loadComponent }'
  - ./app/scripts/DataBaseHandling.js: '{ dbHandle }'
AppFuncs:
  - Vars
  - app: 'express()'
  - sqlite3: 'require("sqlite3").verbose()'
  - dbPath: 'path.resolve(__dirname, "data_base/index.db")'
  - readFileAsync: 'promisify(fs.readFile)'
AppVariables: 
  - Vars
  - __PROJECT_DIR__: 'path.resolve(__dirname)'
  - __NK__:
      url: []
      langs:
        list:
          ru: { emoji: '🇷🇺', name: 'Русский' } 
          en: { emoji: '🇬🇧', name: 'English' } 
          ja: { emoji: '🇯🇵', name: '日本語' } 
          zh: { emoji: '🇨🇳', name: '简体中文' } 
          ko: { emoji: '🇰🇷', name: '한국어' } 
          vi: { emoji: '🇻🇳', name: 'Tiếng Việt' } 
          mo: { emoji: '🇲🇩', name: 'Молдовеняскэ' } 
          ro: { emoji: '🇷🇴', name: 'Română' }
        supported: ['ru', 'en', 'ja', 'zh', 'ko', 'vi', 'mo', 'ro']
  - VALID_COOKIES: ['savedSettings', 'latestCommands', 'selectedItems', 'NK']
  - VALID_MODES: ['kamon', 'banners', 'clans', 'cv', 'landing', 'tree', 'license', 'pattern', 'reader']
  - VALID_SELECTED: ['2d', '3d']




